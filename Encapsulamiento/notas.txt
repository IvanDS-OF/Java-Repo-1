Existen 3 tipos de paquetes

Public

Private - Son los mas restringidos y solamente podemos tener acceso a ellos desde dentro de metodos 
o constructores de esa misma clase
Idealmente todas las variables de instancia deberian ser privadas
Para que no sea posible acceder y modificar las variables de instancia desde una clase externa
es necesario colocar la palara **private** antes de cada una de las variables a la hora de crearlas


Protected



//No hay prolema en crear una clase con el mismo nombre dentro de un proyecto 
Siempre y cuendo pertenezcan a diferente package



Una variable esta tica es una variable que pertenece a la clase 
Por lo que solo existe una copia de la misma que se comparte
por todas las instancias de esa clase

Las variables de instancia se pueden ir modificando con el tiempo sin repercutir en otras instancias
mientras que las variables de instancia estaticas si tienen repercuciones en otras llamadas
Por lo que es importante y necesario reconcoer en qué momento son necesarias las variables de instancia

//Un uso bueno y frecuente de las variables de instancia son aquellos en donde podmeos tener algunas constantes
delcaradas y que afectan a todo el cpdigo que las llama en un solo movimiento. Las famosas variables Finals
Y asi como hay variables estaticas, hay etodos estaticos que nos sirven para modificas las variables estaticas 




Clases internas
Nos sirven para hacer modificaciones de las propiedades de la clase externa






MODULOS
son agrupaciones de paquetes y otros recursos como imagenes o archivos XML
ocn un identificador unico
Cada modulo incluye un DESCRIPTOR que indica su nombre, sus dependencias
Inidica los servicios que ofrece, los ervicios que consume y a qué modulos 
ofrece alguna reflexion
REFLEXION - Leer metadatos de una clase que de otro modo estarían oculos
    Sirven para
Configuracion confiable
Encapsulacion fuerte
Plataformaescalable
Mayor integridad de la Plataformaescalable
Rendimiento mejorado
*Posterior a crear unmodulo con la sintaxis correcta, podemos hacer uso de las siguientes Directivas 
requires - Especifica que este modulo depende de otro modulo
requires transitive - Especifica que otros modulos que lean este modulo tambien seran capaces de leer esta dependencias
exports - Especifica los paquetes del modulo cuyos tipos publicos seran accesibles por otrso modulos
exports...to - Permite especificar a que modulos se les permite acceder a estos paquetes
uses - Permite especificar un servicio usado por este modulo
(Los servicios se definen mediante INTERFACES o CLASES ABSTRACTAS) 
provides...with - Especifica que el modulo provee de la impementacion de un servicio
open, opens y opens...to  - 



























